{"version":3,"sources":["components/Wrapper.js","components/Header.js","components/Tile.js","components/Plane.js","components/InfoPanel.js","utils/parseInput.js","App.js","index.js"],"names":["Wrapper","props","className","DroneInfo","text","value","Header","onClick","uniqueLocations","locationsPhotographed","photoCount","useState","selected","setSelected","id","type","name","onChange","checked","htmlFor","Tile","forwardRef","ref","visited","current","showMarker","xIndex","yIndex","undefined","style","top","width","bottom","left","Plane","droneData","minX","minY","maxX","maxY","droneCoordinates","x","y","useRef","useEffect","scrollIntoView","behaviour","grid","i","rowData","j","valueAtPoint","push","key","Math","abs","InfoPanel","parseInput","char","dataObj","produce","draftObj","locationsWithPhoto","runTypes","App","setDroneData","runType","setRunType","drawRef","index","data","charAt","setTimeout","flightPath","Object","keys","length","values","reduce","acc","cur","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31152ebb.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Wrapper(props) {\n    return <div className=\"lg:container lg:mx-auto\" {...props} />\n}\n\nexport default Wrapper;","import React, { useState } from \"react\";\n\nimport Wrapper from \"./Wrapper\";\n\nfunction DroneInfo({ text, value }) {\n  return <p className=\"text-sm mr-4\">{text}<span className=\"ml-1 text-xs\">{value}</span></p>\n\n}\n\nfunction Header({\n  onClick,\n  uniqueLocations = 0,\n  locationsPhotographed = 0,\n  photoCount = 0,\n}) {\n  const [selected, setSelected] = useState(\"draw\");\n  return (\n    <div className=\"bg-gray-400 fixed z-10 w-full p-2 top-0\">\n      <Wrapper>\n        <div className=\"flex items-center\">\n          <nav className=\"flex-1\">Drone simulator</nav>\n          {<DroneInfo text=\"Unique locations\" value={uniqueLocations} />}\n          {<DroneInfo text=\"Photos taken\" value={photoCount} />}\n          {<DroneInfo text=\"Locations photographed\" value={locationsPhotographed} />}\n          <input\n            id=\"draw\"\n            type=\"radio\"\n            name=\"type\"\n            value=\"draw\"\n            onChange={() => setSelected(\"draw\")}\n            checked={\"draw\" === selected}\n          />\n          <label className=\"mr-4 ml-2\" htmlFor=\"draw\">\n            Draw\n          </label>\n          <input\n            id=\"simulate\"\n            type=\"radio\"\n            name=\"type\"\n            value=\"simulate\"\n            onChange={() => setSelected(\"simulate\")}\n            checked={\"simulate\" === selected}\n          />\n          <label className=\"ml-2\" htmlFor=\"simulate\">Simulate</label>\n          <button\n            className=\"bg-white px-4 rounded-lg ml-4\"\n            onClick={() => onClick(selected)}\n          >\n            Start\n          </button>\n        </div>\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { forwardRef } from \"react\";\n\nconst Tile = forwardRef(\n  ({ visited, current, showMarker, xIndex, yIndex }, ref) => {\n    return (\n      <div\n        ref={current ? ref : undefined}\n        className={`h-6 w-6 border-2 rad-6 border-purple-900 text-center rounded m-1 inline-block box-border relative\n            ${\n          visited\n            ? \"bg-blue-400\"\n            : visited === undefined\n              ? \"\"\n              : \"bg-green-400\"\n          } `}\n      >\n        {visited || \"\"}\n        {showMarker && current && (\n          <span\n            className=\"absolute text-red-700 text-3xl inset-0\"\n            style={{ top: -13 }}\n          >\n            X\n          </span>\n        )}\n        {xIndex && (\n          <span\n            className=\"absolute text-xs left-0\"\n            style={{\n              width: \"24px\",\n              bottom: \"-25px\",\n            }}\n          >\n            {xIndex}\n          </span>\n        )}\n        {yIndex && (\n          <span\n            className=\"absolute text-xs\"\n            style={{\n              left: \"-25px\",\n            }}\n          >\n            {yIndex}\n          </span>\n        )}\n      </div>\n    );\n  }\n);\n\nexport default Tile;\n","import React, { useEffect, useRef } from 'react'\nimport Tile from './Tile'\n\nfunction Plane({ droneData, showMarker }) {\n    const { minX, minY, maxX, maxY, droneCoordinates, x, y } = droneData\n    const ref = useRef()\n\n    useEffect(() => {\n        if (ref.current) {\n            ref.current.scrollIntoView({ behaviour: \"smooth\" })\n        }\n    }, [droneData])\n\n    let grid = []\n\n    for (let i = minY; i <= maxY; i++) {\n        let rowData = []\n\n        for (let j = minX; j <= maxX; j++) {\n            let valueAtPoint = droneCoordinates[`${j},${i}`]\n            let xIndex, yIndex;\n            if (minY === i)\n                xIndex = \"\" + j\n            if (minX === j)\n                yIndex = \"\" + i\n\n            rowData.push(<Tile\n                key={`${j},${i}`}\n                {...{ ref }}\n                visited={valueAtPoint}\n                current={x === j && y === i}\n                {...{ showMarker, xIndex, yIndex }}\n            />)\n        }\n        let width = (Math.abs(minX) + maxX + 1)\n\n        grid = [<div className=\"flex justify-center\" key={i} style={{ width: width * 32 }} >{rowData}</div>, ...grid]\n    }\n\n    return <div className=\"mt-4 p-6 mx-auto h-full w-mContent\">{grid}</div>\n}\n\nexport default Plane","import React from 'react'\n\nimport Wrapper from './Wrapper'\n\nfunction InfoPanel() {\n    return <Wrapper>\n        <div className=\"mt-16\"></div>\n        <h1 className=\"text-3xl\">Welcome to  the Drone Path Visualizer </h1>\n        <ol className=\"list-disc mt-4\">\n            <li>Select the type of animation you want</li>\n            <li>Click <strong>Start</strong> and enjoy the show!</li>\n        </ol>\n    </Wrapper>\n}\n\nexport default InfoPanel","import produce from 'immer'\n\nexport function parseInput(char, dataObj) {\n    let result = produce(dataObj, draftObj => {\n        switch (char) {\n            case \"^\": {\n                draftObj.y++;\n                if (!draftObj.droneCoordinates[`${draftObj.x},${draftObj.y}`]) {\n                    draftObj.droneCoordinates[`${draftObj.x},${draftObj.y}`] = 0\n                }\n                if (draftObj.maxY < draftObj.y) {\n                    draftObj.maxY = draftObj.y\n                }\n                break;\n            }\n            case \"v\": {\n                draftObj.y--;\n                if (!draftObj.droneCoordinates[`${draftObj.x},${draftObj.y}`]) {\n                    draftObj.droneCoordinates[`${draftObj.x},${draftObj.y}`] = 0\n                }\n                if (draftObj.minY > draftObj.y) {\n                    draftObj.minY = draftObj.y;\n                }\n                break\n            }\n            case \"<\": {\n                draftObj.x--;\n                if (!draftObj.droneCoordinates[`${draftObj.x},${draftObj.y}`]) {\n                    draftObj.droneCoordinates[`${draftObj.x},${draftObj.y}`] = 0\n                }\n                if (draftObj.minX > draftObj.x) {\n                    draftObj.minX = draftObj.x;\n                }\n                break\n            }\n            case \">\": {\n                draftObj.x++;\n                if (!draftObj.droneCoordinates[`${draftObj.x},${draftObj.y}`]) {\n                    draftObj.droneCoordinates[`${draftObj.x},${draftObj.y}`] = 0\n                }\n                if (draftObj.maxX < draftObj.x) {\n                    draftObj.maxX = draftObj.x;\n                }\n                break\n            }\n            case \"x\": {\n                draftObj.photoCount += 1;\n                if (!draftObj.droneCoordinates[`${draftObj.x},${draftObj.y}`]) {\n                    draftObj.droneCoordinates[`${draftObj.x},${draftObj.y}`] = 1\n                } else {\n                    draftObj.droneCoordinates[`${draftObj.x},${draftObj.y}`] += 1\n                }\n                break\n            }\n        }\n    })\n\n    return result\n}","import React, { useEffect, useState, useRef } from 'react';\n\nimport Header from './components/Header'\nimport Plane from './components/Plane'\nimport InfoPanel from './components/InfoPanel'\n\nimport { parseInput } from './utils/parseInput'\n\nimport data from './data.json'\n\nlet dataObj = {\n  minX: 0,\n  minY: 0,\n  maxX: 0,\n  maxY: 0,\n  droneCoordinates: {},\n  x: 0,\n  y: 0,\n  photoCount: 0,\n  locationsWithPhoto: 0,\n}\n\nconst runTypes = [\"draw\", \"simulate\"]\n\nfunction App() {\n  const [droneData, setDroneData] = useState(dataObj)\n  const [runType, setRunType] = useState()\n  const drawRef = useRef(false)\n  const index = useRef(0)\n\n  useEffect(() => {\n    if (runType === runTypes[1] && data.data.charAt(index.current)) {\n      setTimeout(() => {\n        index.current += 1;\n        setDroneData(parseInput(data.data.charAt(index.current), droneData))\n      }, 250)\n    } else if (runType === runTypes[0] && !drawRef.current) {\n      drawRef.current = true;\n      let flightPath = null\n      for (let char of data.data) {\n        flightPath = parseInput(char, flightPath || droneData)\n      }\n      setDroneData(flightPath)\n    }\n  }, [droneData, setDroneData, runType])\n\n  let uniqueLocations = Object.keys(droneData.droneCoordinates).length\n  let photoCount = droneData.photoCount;\n  let locationsPhotographed =\n    Object.values(droneData.droneCoordinates).reduce((acc, cur) => {\n      if (cur)\n        acc += 1;\n      return acc\n    }, 0)\n\n  function onClick(value) {\n    setRunType(value)\n    index.current = 0;\n  }\n\n  return (\n    <>\n      <Header {...{ onClick, uniqueLocations, photoCount, locationsPhotographed }} />\n      {runType ? <Plane {...{ droneData, runType }} showMarker={runTypes[1] === runType} /> : <InfoPanel />}\n    </ >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}